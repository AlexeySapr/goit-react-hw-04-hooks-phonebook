{"version":3,"sources":["constants/theme.js","components/container/Container.styled.jsx","components/container/Container.js","components/section/Section.styled.jsx","components/section/Section.js","components/contactForm/ContactForm.styled.jsx","components/contactForm/ContactForm.js","components/contactList/ContactList.styled.jsx","components/contactList/ContactList.js","components/contactFilter/ContactFilter.styled.jsx","components/contactFilter/ContactFilter.js","components/header/Header.styled.jsx","components/header/Header.js","App.js","index.js"],"names":["theme","Object","freeze","colors","primary","white","borderColor","textColor","inputBoxShadow","Box","styled","div","Container","children","Title","h2","Section","title","FormContacts","form","props","InputLabel","label","FormInput","input","FormButton","button","ContactForm","state","name","number","handleNameChange","event","currentTarget","value","setState","onSubmit","preventDefault","handleSubmit","resset","this","type","onChange","pattern","required","Component","List","ul","ListItem","li","Text","p","ItemBtn","ContactList","contacts","onDeleteContact","map","contact","onClick","id","ContactFilter","Header","App","filter","isInContacts","normalizedName","toLowerCase","replace","normalizedNumber","some","addContact","newContact","alert","nanoid","prevState","delContact","contactId","filterChange","prevProps","localStorage","setItem","JSON","stringify","storageContacts","parse","getItem","normalizedFilter","filteredContacts","includes","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c0b9c201.chunk.js","sourcesContent":["export const theme = Object.freeze({\n  colors: {\n    primary: '#57d0e6',\n    white: '#fff',\n    borderColor: '#bdbdbd',\n    textColor: '#212529',\n    inputBoxShadow: '0 0 0 0.2rem rgba(87, 208, 230, 0.5)',\n  },\n});\n","import styled from '@emotion/styled';\n\nexport const Box = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 1170px;\n  padding: 15px;\n`;\n","import PropTypes from 'prop-types';\nimport { Box } from './Container.styled';\n\nfunction Container({ children }) {\n  return <Box>{children}</Box>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import styled from '@emotion/styled';\n\nexport const Box = styled.div`\n  margin-top: 15px;\n  margin-bottom: 15px;\n`;\n\nexport const Title = styled.h2`\n  font-weight: 500;\n  text-transform: uppercase;\n`;\n","import PropTypes from 'prop-types';\nimport { Box, Title } from './Section.styled';\n\nfunction Section({ title, children }) {\n  return (\n    <Box>\n      <Title>{title}</Title>\n      {children}\n    </Box>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import styled from '@emotion/styled';\n\nexport const FormContacts = styled.form`\n  border: ${props => `2px solid ${props.theme.colors.primary}`};\n  padding: 30px;\n  width: 500px;\n`;\n\nexport const InputLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-weight: 500;\n  font-size: 1.5rem;\n  margin-bottom: 20px;\n`;\n\nexport const FormInput = styled.input`\n  width: 300px;\n  margin-top: 5px;\n\n  padding: 0.375rem 0.75rem;\n  font-family: inherit;\n  font-size: 1rem;\n  font-weight: 400;\n  line-height: 1.5;\n  color: ${props => props.theme.colors.textColor};\n  border: ${props => `1px solid ${props.theme.colors.borderColor}`};\n  border-radius: 0.25rem;\n  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n\n  &:focus {\n    border-color: ${props => props.theme.colors.primary};\n    outline: 0;\n    box-shadow: ${props => props.theme.colors.inputBoxShadow};\n  }\n`;\n\nexport const FormButton = styled.button`\n  background-color: transparent;\n  padding: 5px 10px;\n  border-radius: 5px;\n  width: 120px;\n  font-size: 1rem;\n  transition: background-color 300ms ease-in-out, color 300ms ease-in-out;\n\n  &:hover,\n  &:focus {\n    color: ${props => props.theme.colors.white};\n    outline: 0;\n    cursor: pointer;\n    background-color: ${props => props.theme.colors.primary};\n  }\n`;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  FormContacts,\n  InputLabel,\n  FormInput,\n  FormButton,\n} from './ContactForm.styled';\n\nexport class ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleNameChange = event => {\n    const { name, value } = event.currentTarget;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  onSubmit = event => {\n    event.preventDefault();\n    this.props.handleSubmit(this.state);\n    this.resset();\n  };\n\n  resset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <FormContacts onSubmit={this.onSubmit}>\n        <InputLabel>\n          Name\n          <FormInput\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleNameChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </InputLabel>\n\n        <InputLabel>\n          Number\n          <FormInput\n            type=\"tel\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.handleNameChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </InputLabel>\n        <FormButton type=\"submit\">Add contact</FormButton>\n      </FormContacts>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  padding: 0;\n  width: 380px;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom: ${props => `1px solid ${props.theme.colors.primary}`};\n`;\n\nexport const Text = styled.p`\n  font-size: 1.1rem;\n`;\n\nexport const ItemBtn = styled.button`\n  background-color: transparent;\n  padding: 5px 10px;\n  border-radius: 5px;\n  width: 75px;\n  font-size: 0.8rem;\n  transition: background-color 300ms ease-in-out, color 300ms ease-in-out;\n\n  &:hover,\n  &:focus {\n    color: ${props => props.theme.colors.white};\n    outline: 0;\n    cursor: pointer;\n    background-color: ${props => props.theme.colors.primary};\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { List, ListItem, Text, ItemBtn } from './ContactList.styled';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <List>\n      {contacts.map(contact => (\n        <ListItem key={contact.id}>\n          <Text>\n            {contact.name}: {contact.number}\n          </Text>\n          <ItemBtn type=\"button\" onClick={() => onDeleteContact(contact.id)}>\n            Delete\n          </ItemBtn>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import styled from '@emotion/styled';\n\nexport const InputLabel = styled.label`\n  font-size: 1.1rem;\n  font-weight: 500;\n`;\n\nexport const FormInput = styled.input`\n  margin-left: 20px;\n\n  padding: 0.2rem 0.4rem;\n  color: ${props => props.theme.colors.textColor};\n  border: ${props => `1px solid ${props.theme.colors.borderColor}`};\n  border-radius: 0.25rem;\n  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n\n  &:focus {\n    border-color: ${props => props.theme.colors.primary};\n    outline: 0;\n    box-shadow: ${props => props.theme.colors.inputBoxShadow};\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { InputLabel, FormInput } from './ContactFilter.styled';\n\nconst ContactFilter = ({ value, onChange }) => {\n  return (\n    <InputLabel>\n      Find contacts by name:\n      <FormInput\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={onChange}\n      ></FormInput>\n    </InputLabel>\n  );\n};\n\nContactFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default ContactFilter;\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h2`\n  text-align: center;\n  background-color: ${props => props.theme.colors.primary};\n`;\n","import PropTypes from 'prop-types';\nimport { Title } from './Header.styled';\n\nfunction Header({ title, children }) {\n  return (\n    <>\n      <Title>{title}</Title>\n      {children}\n    </>\n  );\n}\n\nHeader.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Header;\n","import React from 'react';\nimport { nanoid } from 'nanoid';\nimport Container from './components/container/Container';\nimport Section from './components/section/Section';\nimport ContactForm from './components/contactForm/ContactForm';\nimport ContactList from './components/contactList/ContactList';\n// import initData from './tempData/data.json';\nimport ContactFilter from './components/contactFilter/ContactFilter';\nimport Header from './components/header/Header';\n\nclass App extends React.Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  isInContacts = ({ name, number }) => {\n    const normalizedName = name.toLowerCase().replace(/\\s+/g, '');\n    const normalizedNumber = number.replace(/\\D/g, '');\n    return this.state.contacts.some(contact => {\n      return (\n        contact.name.toLowerCase().replace(/\\s+/g, '') === normalizedName ||\n        contact.number.replace(/\\D/g, '') === normalizedNumber\n      );\n    });\n  };\n\n  addContact = newContact => {\n    const { name, number } = newContact;\n\n    if (this.isInContacts(newContact)) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n\n    const contact = {\n      id: nanoid(),\n      name,\n      number,\n    };\n\n    this.setState(prevState => ({\n      contacts: [contact, ...prevState.contacts],\n    }));\n  };\n\n  delContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  filterChange = event => {\n    this.setState({\n      filter: event.currentTarget.value,\n    });\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  componentDidMount() {\n    const storageContacts = JSON.parse(localStorage.getItem('contacts'));\n\n    if (storageContacts) {\n      this.setState({ contacts: storageContacts });\n    }\n  }\n\n  render() {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    const filteredContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n\n    return (\n      <Header title=\"Phonebook\">\n        <Container>\n          <Section title={'Phonebook'}>\n            <ContactForm handleSubmit={this.addContact} />\n          </Section>\n\n          <Section title={'Contacts'}>\n            <ContactFilter\n              value={this.state.filter}\n              onChange={this.filterChange}\n            />\n            <ContactList\n              contacts={filteredContacts}\n              onDeleteContact={this.delContact}\n            />\n          </Section>\n        </Container>\n      </Header>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from '@emotion/react';\nimport { theme } from './constants/theme';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}